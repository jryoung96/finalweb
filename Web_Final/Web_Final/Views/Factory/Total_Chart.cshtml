@model List<Web_Final.Models.Process.T1Item>
@*
   차트 : 생산
*@
@{
}

<div class="container-fluid">
    <h1 class="display-4">날짜별 생산 현황</h1>
    <table class="table table-hover">
        <thead class="table-success">
            <tr>
                <th>제품명</th>
                <th>종류</th>
                <th>생산날짜</th>
                <th>생산수량</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@item.Name</td>
                    <td>@item.Type</td>
                    <td>@item.RegDate</td>
                </tr>
                }
                    
            }
        </tbody>
    </table>
    @*chart가 그려질 canvas*@
    <div>
        <canvas id="chart"></canvas>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</div>
<script>
    const ctx = document.getElementById('chart');
    let chart;
    let labels;
    let data;
    window.onload = function () { //페이지 로딩이 끝날 시점
        fetch("/Factory/CountJson")
            .then(response => response.json())
            .then((countObj) => {
                labels = countObj.map(o => o.name);
                data = countObj.map(o => o.count);
                createChart(labels, data);

                //1초마다 차트 업데이트
                setInterval(updateChart, 1000)
            })
        //createChart();
    };

    const createChart = function (labels, data) {
        // Chart는 chart.js에서 자체 제공 각 변수는 (첫번ㅉ)
        chart = new Chart(ctx, {
            type: 'bar',
            data: {
                //labels: ['재걸','혁주','건우','용학','택수','동후','건종'],
                labels: labels,
                datasets: [{
                    label: 'Stock Count',
                    //data:[56,43,20,70,80,100,66],
                    data: data,
                    borderWidth: 1
                },],
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true,
                    }
                }
            }
        });
    }
    const updateChart = function () {
        fetch("/Home/CountJson")
            .then(response => response.json())
            .then((countObj) => {
                labels = countObj.map(o => o.name);
                data = countObj.map(o => o.count);
                chart.data.labels = labels;
                chart.data.datasets[0].data = data;
                chart.update();// 무조건 update를 해야 반영된다
            }
            )
    }
</script>



